//
// Define a set of common settings for all projects, and include
// all the 2.11 projects. The included file also contains a large set of
// vars definitions, which are used later in this file as well.
//


vars.base: {
}
include file("common.conf")

//
// And the generation of the artifacts more closely related to the Scala compiler.
//
build += {
  extraction-version: "2.11.12"
  cross-version: disabled
  sbt-version: ${vars.sbt-version}
  projects: [
  // Scala 2.11.x
  {
    name:  "scala"
    system: assemble
    extra.parts: {
      cross-version: standard
      sbt-version: ${vars.sbt-version}
      extraction-version: "2.11.12"
      cross-version: disabled
    }
    extra.parts.projects: [
      {
        set-version: ${vars.scala-version}
        name:   scala-library
        system: aether
        uri:   "aether:org.scala-lang#scala-library;"${vars.scala-version}
      }
      {
        set-version: ${vars.scala-version}
        name:   scala-reflect
        system: aether
        uri:   "aether:org.scala-lang#scala-reflect;"${vars.scala-version}
      }
      {
        set-version: ${vars.scala-version}
        name:   scala-compiler
        system: aether
        uri:   "aether:org.scala-lang#scala-compiler;"${vars.scala-version}
      }
      {
        set-version: "1.0.6"
        name:   scala-xml
        system: aether
        uri:   "aether:org.scala-lang.modules#scala-xml_2.11;1.0.6"
      }
      {
        set-version: "1.0.7"
        name:   scala-parser-combinators
        system: aether
        uri:   "aether:org.scala-lang.modules#scala-parser-combinators_2.11;1.0.7"
      }
    ]
  }

  ${vars.base} {
    name: "scala-continuations"
    uri: "https://github.com/"${vars.scala-continuations-ref}
    // Trying to avoid unexplained error on Toolbox based tests: "bad option: -P:continuations:enable"
    // This is reproducible outside of dbuild, but hard to pin down.
    // Example: https://gist.github.com/retronym/9122414
    // Note the plugin JAR was rebuild on inspect `test:test`, even though there was no source change.
    // After that, the next `test` worked.
    extra.commands: ["clean", "plugin/compile:package"]
  }

  // ${vars.base} {
  //   name: "scala-partest"
  //   uri: "https://github.com/"${vars.scala-partest-ref}
  // }

  ${vars.base} {
    name: scalacheck
    uri:    "https://github.com/"${vars.scalacheck-ref}
    extra.run-tests: false
  }

  ${vars.base} {
    name: "scala-swing"
    uri: "https://github.com/"${vars.scala-swing-ref}
    extra.commands: ${vars.default-commands} [
      // work around https://github.com/scala/community-builds/issues/575
      // (in a community build context, we don't need MiMa to run)
      "set every ScalaModulePlugin.mimaPreviousVersion := None"
    ]
  }
]
}
